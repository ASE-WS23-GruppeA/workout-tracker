version: '3.8'

services:

  auth-server:
    build: microservices/authorization-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: [ "CMD", "curl", "-fs", "http://localhost:9999/actuator/health" ]
      interval: 5s
      timeout: 2s
      retries: 10

  api-gateway:
    build: microservices/api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8443:8443"
    depends_on:
      auth-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-fs", "http://localhost:8443/actuator/health" ]
      interval: 5s
      timeout: 2s
      retries: 10

  user-service:
    build: microservices/user-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      api-gateway:
        condition: service_healthy
      postgres_db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-fs", "http://localhost:8080/actuator/health" ]
      interval: 5s
      timeout: 2s
      retries: 10

  postgres_db:
    image: postgres:16
    environment:
      POSTGRES_USER: wt
      POSTGRES_PASSWORD: wt
      POSTGRES_DB: wt_user_service
    ports:
      - "5432:5432"
    volumes:
      #      - ./db_data_volume:/var/lib/postgresql/data
      - ./microservices/user-service/init_scripts/01_ddl.sql:/docker-entrypoint-initdb.d/01_ddl.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -U wt -d wt_user_service" ]
      interval: 5s
      timeout: 2s
      retries: 10
