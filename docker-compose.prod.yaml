version: '3.8'

services:

  postgres-user-db:
    image: postgres:16
    environment:
      POSTGRES_USER: wt
      POSTGRES_PASSWORD: wt
      POSTGRES_DB: wt_user_service
    volumes:
      - ./workout-tracker/microservices/user-service/init_scripts/01_ddl.sql:/docker-entrypoint-initdb.d/01_ddl.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -U wt -d wt_user_service" ]
      interval: 5s
      timeout: 2s
      retries: 10

  postgres-exercise-db:
    image: postgres:latest
    env_file:
      - ./exercise.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q" ]
      interval: 5s
      timeout: 10s
      retries: 10

  postgres-workout-db:
    image: postgres:latest
    env_file:
      - ./workout.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q" ]
      interval: 5s
      timeout: 10s
      retries: 10

  auth-server:
    image: registry.digitalocean.com/do-ase-registry/auth-server:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: [ "CMD", "curl", "-fs", "http://localhost:9999/actuator/health" ]
      interval: 5s
      timeout: 2s
      retries: 10

  api-gateway:
    image: registry.digitalocean.com/do-ase-registry/api-gateway:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: [ "CMD", "curl", "-fs", "http://localhost:8443/actuator/health" ]
      interval: 5s
      timeout: 2s
      retries: 10

  user-service:
    image: registry.digitalocean.com/do-ase-registry/user-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      postgres-user-db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-fs", "http://localhost:8080/actuator/health" ]
      interval: 5s
      timeout: 2s
      retries: 10

  exercise-service:
    image: registry.digitalocean.com/do-ase-registry/exercise-service:latest
    depends_on:
      postgres-exercise-db:
        condition: service_healthy

  exercise-service-data-initializer:
    image: registry.digitalocean.com/do-ase-registry/exercise-service-insertion:latest
    command: "sh -c 'npx prisma migrate deploy && node dataInsertion.js'"
    depends_on:
      postgres-exercise-db:
        condition: service_healthy

  workout-service:
    image: registry.digitalocean.com/do-ase-registry/workout-service:latest
    depends_on:
      postgres-workout-db:
        condition: service_healthy

  workout-service-data-initializer:
    image: registry.digitalocean.com/do-ase-registry/workout-service-insertion:latest
    command: "sh -c 'npx prisma migrate deploy && node dataInsertion.js'"
    depends_on:
      postgres-workout-db:
        condition: service_healthy

  analytics-service:
    image: registry.digitalocean.com/do-ase-registry/analytics-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  frontend:
    image: registry.digitalocean.com/do-ase-registry/frontend:latest
    ports:
      - "80:80"
    healthcheck:
      test: [ "CMD-SHELL", "curl -fs http://localhost:80" ]
      interval: 5s
      timeout: 2s
      retries: 10
    depends_on:
      postgres-user-db:
        condition: service_healthy
